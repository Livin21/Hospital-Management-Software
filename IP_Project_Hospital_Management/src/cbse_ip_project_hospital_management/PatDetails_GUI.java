/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cbse_ip_project_hospital_management;

import java.sql.*;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Livin
 */
public class PatDetails_GUI extends javax.swing.JInternalFrame {

    /**
     * Creates new form PatDetails_GUI
     */
    public PatDetails_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gender = new javax.swing.ButtonGroup();
        sortBy = new javax.swing.ButtonGroup();
        sortType = new javax.swing.ButtonGroup();
        search = new javax.swing.ButtonGroup();
        stay = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        patTBL = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pcodeTXT = new javax.swing.JTextField();
        pnameTXT = new javax.swing.JTextField();
        deptCB = new javax.swing.JComboBox();
        dnameCB = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        maleRB = new javax.swing.JRadioButton();
        femaleRB = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        dcodeTXT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        diagnosisTXT = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fee = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        opRB = new javax.swing.JRadioButton();
        ipRB = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        modifyBTN = new javax.swing.JButton();
        saveBTN = new javax.swing.JButton();
        cancelBTN = new javax.swing.JButton();
        addBTN = new javax.swing.JButton();
        clearBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        stayCharges = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        pcodeSortRB = new javax.swing.JRadioButton();
        amtSortRB = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        descRB = new javax.swing.JRadioButton();
        ascRB = new javax.swing.JRadioButton();
        sortBTN = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        pnameSearchRB = new javax.swing.JRadioButton();
        pcodeSearchRB = new javax.swing.JRadioButton();
        deptSearchRB = new javax.swing.JRadioButton();
        searchBTN = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        refreshBTN = new javax.swing.JButton();
        closeBTN = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(987, 508));
        setMinimumSize(new java.awt.Dimension(987, 508));
        setPreferredSize(new java.awt.Dimension(987, 508));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        patTBL.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        patTBL.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        patTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Code", "Patient Name", "Doctor Code", "Diagnosis", "Department", "Gender", "Amount", "Patient Type", "DOA", "DOD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(patTBL);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 13, 950, 90);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Add Patient Details"));
        jPanel1.setPreferredSize(new java.awt.Dimension(323, 377));

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel1.setText("Patient Code");

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel2.setText("Patient Name");

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel3.setText("Department");

        pcodeTXT.setEditable(false);
        pcodeTXT.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        pnameTXT.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        deptCB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        deptCB.setModel(new DefaultComboBoxModel());
        deptCB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deptCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                deptCBItemStateChanged(evt);
            }
        });
        deptCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptCBActionPerformed(evt);
            }
        });

        dnameCB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        dnameCB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dnameCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dnameCBItemStateChanged(evt);
            }
        });
        dnameCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnameCBActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel7.setText("Doctor Name");

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel8.setText("Gender");

        Gender.add(maleRB);
        maleRB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        maleRB.setText("Male");

        Gender.add(femaleRB);
        femaleRB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        femaleRB.setText("Female");

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel4.setText("Doctor Code");

        dcodeTXT.setEditable(false);
        dcodeTXT.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel5.setText("Hospital Charges");

        diagnosisTXT.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel6.setText("Diagnosis");

        fee.setEditable(false);
        fee.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel10.setText("Patient Type");

        stay.add(opRB);
        opRB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        opRB.setText("Out Patient");
        opRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opRBActionPerformed(evt);
            }
        });

        stay.add(ipRB);
        ipRB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        ipRB.setText("In Patient");

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        modifyBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        modifyBTN.setText("MODIFY");
        modifyBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifyBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBTNActionPerformed(evt);
            }
        });

        saveBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        saveBTN.setText("SAVE");
        saveBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTNActionPerformed(evt);
            }
        });

        cancelBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        cancelBTN.setText("CANCEL");
        cancelBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        addBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        addBTN.setText("ADD");
        addBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        clearBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        clearBTN.setText("CLEAR");
        clearBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBTNActionPerformed(evt);
            }
        });

        deleteBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        deleteBTN.setText("DELETE");
        deleteBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modifyBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancelBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(deleteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(modifyBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(clearBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jLabel11.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        jLabel11.setText("Stay Charges");

        stayCharges.setEditable(false);
        stayCharges.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel12.setText("(Rs.350 per day)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(opRB)
                                            .addComponent(maleRB))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ipRB)
                                            .addComponent(femaleRB)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(pcodeTXT, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pnameTXT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(stayCharges)
                                    .addComponent(fee)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(diagnosisTXT)
                                            .addComponent(dcodeTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dnameCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(deptCB, 0, 194, Short.MAX_VALUE))))))
                        .addGap(13, 13, 13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(218, 218, 218)))
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(pcodeTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pnameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ipRB)
                            .addComponent(opRB)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(maleRB)
                            .addComponent(femaleRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deptCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dnameCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(diagnosisTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(dcodeTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(stayCharges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 110, 480, 360);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Sort"));

        sortBy.add(pcodeSortRB);
        pcodeSortRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        pcodeSortRB.setText("Patient Code");
        pcodeSortRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcodeSortRBActionPerformed(evt);
            }
        });

        sortBy.add(amtSortRB);
        amtSortRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        amtSortRB.setText("Amount");

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        sortType.add(descRB);
        descRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        descRB.setText("Descending");

        sortType.add(ascRB);
        ascRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        ascRB.setText("Ascending");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descRB)
                    .addComponent(ascRB)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(ascRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(descRB))
        );

        sortBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        sortBTN.setText("SORT");
        sortBTN.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        sortBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amtSortRB)
                            .addComponent(pcodeSortRB)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(pcodeSortRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amtSortRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Search"));

        search.add(pnameSearchRB);
        pnameSearchRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        pnameSearchRB.setText("Patient Name");

        search.add(pcodeSearchRB);
        pcodeSearchRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        pcodeSearchRB.setText("Patient Code");

        search.add(deptSearchRB);
        deptSearchRB.setFont(new java.awt.Font("Cambria", 0, 16)); // NOI18N
        deptSearchRB.setText("Department");

        searchBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        searchBTN.setText("SEARCH");
        searchBTN.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnameSearchRB)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pcodeSearchRB)
                        .addComponent(deptSearchRB)))
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(searchBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(pnameSearchRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pcodeSearchRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deptSearchRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        refreshBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        refreshBTN.setText("REFRESH");
        refreshBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBTNActionPerformed(evt);
            }
        });

        closeBTN.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        closeBTN.setText("CLOSE");
        closeBTN.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        closeBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(refreshBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(closeBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(630, 110, 340, 300);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cbse_ip_project_hospital_management/patDetails.jpg"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, -20, 980, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String getDate(){
        Calendar c=Calendar.getInstance();
        String date=c.get(Calendar.DATE)+"-"+(c.get(Calendar.MONTH)+1)+"-"+c.get(Calendar.YEAR);
        return date;
    }
    int getYear(){
        Calendar c=Calendar.getInstance();
        int year=c.get(Calendar.YEAR);
        return year;
    }
    int getMonth(){
        Calendar c=Calendar.getInstance();
        int year=c.get(Calendar.MONTH)+1;
        return year;
    }
    int getDay(){
        Calendar c=Calendar.getInstance();
        int year=c.get(Calendar.DATE);
        return year;
    }
    int getNumberOfDays(int Month){
        int n=31;
        switch (Month){
            case 2:n=28;break;
            case 4:
            case 6: 
            case 9:
            case 11:n=30;break;
            default:n=31;break;               
        }
        return n;
    }
    
    void modifyOn(){
        addBTN.setEnabled(false);
        clearBTN.setEnabled(false);
        deleteBTN.setEnabled(false);
        refreshBTN.setEnabled(false);
        closeBTN.setEnabled(false);
        modifyBTN.setEnabled(false);
        sortBTN.setEnabled(false);
        searchBTN.setEnabled(false);
        saveBTN.setEnabled(true);
        cancelBTN.setEnabled(true);
    }

    void modifyOff(){
        saveBTN.setEnabled(false);
        cancelBTN.setEnabled(false);
        addBTN.setEnabled(true);
        clearBTN.setEnabled(true);
        deleteBTN.setEnabled(true);
        refreshBTN.setEnabled(true);
        closeBTN.setEnabled(true);
        modifyBTN.setEnabled(true);
        sortBTN.setEnabled(true);
        searchBTN.setEnabled(true);
    }
    
    String date=getDate();
    private void refreshBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBTNActionPerformed
        // TODO add your handling code here:
       modifyOff();
        DefaultTableModel dtm=(DefaultTableModel)patTBL.getModel();
        DefaultComboBoxModel dcbm=(DefaultComboBoxModel)deptCB.getModel();
        String pc="";
        dcbm.removeAllElements();
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String str="Select * from patDetails";
            String str2="Select distinct department from docDetails";
            ResultSet rs=(ResultSet)stmt.executeQuery(str);
            while(dtm.getRowCount()>0){
                dtm.removeRow(0);
            }
            while(rs.next()){
                pc=rs.getString("Patient_Code");
                String pname=rs.getString("Patient_Name");
                String dc=rs.getString("Doctor_Code");
                String disease=rs.getString("Diagnosis");
                String dept=rs.getString("Department");
                String gender=rs.getString("Gender");
                String amt=rs.getString("Amount");
                String pt=rs.getString("Patient_Type");
                String doa=rs.getString("DOA");
                String dod=rs.getString("DOD");
                Object nr[]={pc,pname,dc,disease,dept,gender,amt,pt,doa,dod};
                dtm.addRow(nr);                
            }
            rs.close();
            ResultSet rs2=(ResultSet)stmt.executeQuery(str2);            
            while(rs2.next())
                dcbm.addElement(rs2.getString(1));
            int i=Integer.parseInt(pc);
            i++;
            pcodeTXT.setText(""+i);
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_refreshBTNActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        refreshBTN.doClick();
        clearBTN.doClick();
    }//GEN-LAST:event_formInternalFrameOpened

    private void clearBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBTNActionPerformed
        // TODO add your handling code here:
        refreshBTN.doClick();
        deptCB.setSelectedIndex(0);
        dnameCB.setSelectedIndex(0);
        opRB.setSelected(true);
        pnameTXT.setText("");
        dcodeTXT.setText("");
        diagnosisTXT.setText("");
        maleRB.setSelected(true);
        fee.setText("");
        stayCharges.setText("");
        pcodeSortRB.setSelected(true);
        ascRB.setSelected(true);
        pnameSearchRB.setSelected(true);
        String doctor=(String)dnameCB.getSelectedItem();
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String str="Select Doctor_Code,Consultation_Fee from docDetails where Doctor_Name='"+doctor+"'";
            ResultSet rs=stmt.executeQuery(str);
            rs.first();
            dcodeTXT.setText(rs.getString(1));
            fee.setText(rs.getString(2));
            rs.clearWarnings();
            rs.close();
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_clearBTNActionPerformed

    private void closeBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBTNActionPerformed
        // TODO add your handling code here:
        clearBTN.doClick();
        this.dispose();
    }//GEN-LAST:event_closeBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
        String pc=JOptionPane.showInputDialog("Enter Patient Code of record to be deleted");
        
            try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String str2="Select * from patDetails where Patient_Code='"+pc+"'";
            ResultSet rs2=stmt.executeQuery(str2);
            if(rs2.next()==false){
                JOptionPane.showMessageDialog(this, "No matching record found");
                refreshBTN.doClick();
            }
            rs2.close();
            String str1="Delete from patDetails where patient_code='"+pc+"'";
            stmt.executeUpdate(str1);
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.getMessage());
        }
        refreshBTN.doClick();
    
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void sortBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBTNActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm=(DefaultTableModel)patTBL.getModel();
        String sortBy1="";
        String sortType1="";
        String pc="";
        if(pcodeSortRB.isSelected())
            sortBy1="patient_code";
        else if(amtSortRB.isSelected())
            sortBy1="Amount";
        if(ascRB.isSelected())
            sortType1="asc";
        else if(descRB.isSelected())
            sortType1="desc";
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String str="Select * from patDetails order by "+sortBy1+" "+sortType1;
            ResultSet rs=stmt.executeQuery(str);
            while(dtm.getRowCount()>0){
                dtm.removeRow(0);
            }
            while(rs.next()){
                pc=rs.getString("Patient_Code");
                String pname=rs.getString("Patient_Name");
                String dc=rs.getString("Doctor_Code");
                String disease=rs.getString("Diagnosis");
                String dept=rs.getString("Department");
                String gender1=rs.getString("Gender");
                String amt=rs.getString("Amount");
                String pt=rs.getString("Patient_Type");
                String doa=rs.getString("DOA");
                String dod=rs.getString("DOD");
                Object nr[]={pc,pname,dc,disease,dept,gender1,amt,pt,doa,dod};
                dtm.addRow(nr);                
            }
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_sortBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm=(DefaultTableModel)patTBL.getModel();
        String searchBy="";
        String item="";
        if(pnameSearchRB.isSelected()){
            searchBy="patient_name";
            item=JOptionPane.showInputDialog(this,"Enter Patient Name to search");
        }
        else if(pcodeSearchRB.isSelected()){
            searchBy="patient_code";
            item=JOptionPane.showInputDialog(this,"Enter Patient Code to search");
        }
        else if(deptSearchRB.isSelected()){
            searchBy="department";
            item=JOptionPane.showInputDialog(this,"Enter Department to search");
        }
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String str="Select * from patDetails where "+searchBy+" like '%"+item+"%'";
            ResultSet rs=stmt.executeQuery(str);
            if(rs.next()==false){
                JOptionPane.showMessageDialog(this,"No matching record found");
                refreshBTN.doClick();
            }
            rs.beforeFirst();
            while(rs.next()){
                String pc=rs.getString("Patient_Code");
                String pname=rs.getString("Patient_Name");
                String dc=rs.getString("Doctor_Code");
                String disease=rs.getString("Diagnosis");
                String dept=rs.getString("Department");
                String gender=rs.getString("Gender");
                String amt=rs.getString("Amount");
                String pt=rs.getString("Patient_Type");
                String doa=rs.getString("DOA");
                String dod=rs.getString("DOD");
                Object nr[]={pc,pname,dc,disease,dept,gender,amt,pt,doa,dod};
                dtm.addRow(nr);
            }
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_searchBTNActionPerformed

    private void pcodeSortRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcodeSortRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcodeSortRBActionPerformed

    private void dnameCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnameCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dnameCBActionPerformed

    private void dnameCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dnameCBItemStateChanged
        // TODO add your handling code here:
        int a=0;
        String doctor=(String)dnameCB.getSelectedItem();
        DefaultComboBoxModel dcbm=(DefaultComboBoxModel)dnameCB.getModel();                                              //error:illegal operation on empty result set
            if(dcbm.getElementAt(0) == null) 
                a++; 
            else {
                try{
                    Class.forName("java.sql.DriverManager");
                    Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
                    Statement stmt=(Statement)con.createStatement();
                    String str="Select Doctor_Code,Consultation_Fee from docdetails where Doctor_Name='"+doctor+"'";
                    ResultSet rs=stmt.executeQuery(str);
                    rs.first();
                    dcodeTXT.setText(rs.getString(1));
                    fee.setText(rs.getString(2));
                    rs.clearWarnings();
                    rs.close();
                    stmt.close();
                    con.close();
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this,e.getMessage());
                }
            }
    }//GEN-LAST:event_dnameCBItemStateChanged

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        // TODO add your handling code here:modifyOff();
        String pc=pcodeTXT.getText();
        String pname=pnameTXT.getText();
        int n=0;
        String doa=getDate();
        String dod="";
        String pt="";
        int day;
        int a;
        if(ipRB.isSelected()){
            n=Integer.parseInt(JOptionPane.showInputDialog(this,"Enter Number of days of stay"));
            if(n>30){
                JOptionPane.showMessageDialog(this,"Sorry, Maximum days of stay is 30");
                clearBTN.doClick();
            }
            else{
                pt="IP";
                doa=date;
                int no=getNumberOfDays(getMonth());
                if(getDay()+n>no){
                    a=no-getDay();
                    day=n-a;
                    Calendar c=Calendar.getInstance();
                    dod=day+"-"+(c.get(Calendar.MONTH)+2)+"-"+c.get(Calendar.YEAR);
                }
                else{
                    Calendar c=Calendar.getInstance();
                    dod=(c.get(Calendar.DATE)+n)+"-"+(c.get(Calendar.MONTH)+1)+"-"+c.get(Calendar.YEAR);
                }
            }
        }
        else if(opRB.isSelected()){
            pt="OP";
            doa="NILL";
            dod="NILL";
        }
        String treatment="None";
        String dept=(String)deptCB.getSelectedItem();
        String dc=dcodeTXT.getText();
        String disease=diagnosisTXT.getText();
        int amt=Integer.parseInt(fee.getText());
        int stay=n*350;
        stayCharges.setText(""+stay);
        String gender="";                                           
        if(maleRB.isSelected())
            gender="Male";
        else if(femaleRB.isSelected())
            gender="Female";
        if(pnameTXT.getText().isEmpty()==false){
            try{
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
                Statement stmt=(Statement)con.createStatement();
                String str="Insert into patDetails values('"+pc+"','"+pname+"','"+dc+"','"+disease+"','"+dept+"','"+gender+"',"+(amt+stay)+
                        ",'"+treatment+"','"+pt+"','"+doa+"','"+n+"','"+dod+"')";
                stmt.executeUpdate(str);
                stmt.close();
                con.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } 
        refreshBTN.doClick();
    }//GEN-LAST:event_addBTNActionPerformed

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        // TODO add your handling code here:
        modifyOff();
        clearBTN.doClick();
        refreshBTN.doClick();
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void saveBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTNActionPerformed
        // TODO add your handling code here:
        String pc=pcodeTXT.getText();
        String pname=pnameTXT.getText();
        String dept=(String)deptCB.getSelectedItem();
        String dc=dcodeTXT.getText();
        String disease=diagnosisTXT.getText();
        int stay=Integer.parseInt(stayCharges.getText());
        String gender="";
        int n=0;
        String pt="";
        String doa="";
        String dod="";
        int day,a;
        int amt=Integer.parseInt(fee.getText());
        
        if(maleRB.isSelected())
            gender="Male";
        else if(femaleRB.isSelected())
            gender="Female";
        if(ipRB.isSelected()){
            n=Integer.parseInt(JOptionPane.showInputDialog(this,"Enter Number of days of stay"));
            if(n>30){
                JOptionPane.showMessageDialog(this,"Sorry, Maximum days of stay is 30");
                clearBTN.doClick();
            }
            else{
                pt="IP";
                doa=date;
                int no=getNumberOfDays(getMonth());
                if(getDay()+n>no){
                    a=no-getDay();
                    day=n-a;
                    Calendar c=Calendar.getInstance();
                    dod=day+"-"+(c.get(Calendar.MONTH)+2)+"-"+c.get(Calendar.YEAR);
                }
                else{
                    Calendar c=Calendar.getInstance();
                    dod=(c.get(Calendar.DATE)+n)+"-"+(c.get(Calendar.MONTH)+1)+"-"+c.get(Calendar.YEAR);
                }
            }
        }
        else if(opRB.isSelected()){
            pt="OP";
            doa="NILL";
            dod="NILL";
        }
        if(pnameTXT.getText().isEmpty()==false){//if clearBTN.doClick() in the above part is executed this is required
            int stay1=n*350;
            stayCharges.setText(""+stay1);
            try{
                Class.forName("java.sql.DriverManager");
                Connection con=(Connection) DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
                Statement stmt=(Statement)con.createStatement();
                String str="Update patDetails set Patient_Name='"+pname+"', Doctor_Code='"+dc+"', Diagnosis='"+disease+"', Department='"+dept+"', Gender='"+gender+"', Amount='"+(amt+stay1-stay)+"', Patient_Type='"+pt+"', DOA='"+doa+"', DOD='"+dod+"', NoDOS='"+n+"' where Patient_Code='"+pc+"'";
                stmt.executeUpdate(str);
                stmt.close();
                con.close();
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,e.getMessage());
            }
        }
        modifyOff();
        clearBTN.doClick();
        refreshBTN.doClick();
    }//GEN-LAST:event_saveBTNActionPerformed

    private void modifyBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBTNActionPerformed
        // TODO add your handling code here:
        modifyOn();
        String pcode=(String)JOptionPane.showInputDialog(this,"Enter Patient Code");
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            Statement stmt1=(Statement)con.createStatement();
            String str="Select * from patdetails where patient_Code='"+ pcode +"'";
            ResultSet rs=stmt.executeQuery(str);
            
            if(pcode!=null && rs.next()==false){                                        
                JOptionPane.showMessageDialog(this,"Record not found in database");
                cancelBTN.doClick();
            }
            else if(pcode==null){
                JOptionPane.showMessageDialog(this,"Sorry. No Patient Code Provided.");
                cancelBTN.doClick();
            }
            else{
                rs.first();
                pcodeTXT.setText(rs.getString("Patient_Code"));
                pnameTXT.setText(rs.getString("Patient_Name"));
                dcodeTXT.setText(rs.getString("Doctor_Code"));
                diagnosisTXT.setText(rs.getString("Diagnosis"));
                fee.setText(rs.getString("Amount"));
                stayCharges.setText((rs.getInt("NoDOS")*350)+"");
                switch(rs.getString("Patient_Type")){
                    case "IP":
                        ipRB.setSelected(true);
                        break;
                    case "OP":
                        opRB.setSelected(true);
                        break;
                    default:
                        opRB.setSelected(true);
                        break;
                }
                if(rs.getString("Gender").equalsIgnoreCase("Male"))
                    maleRB.setSelected(true);
                else
                    femaleRB.setSelected(true);
                deptCB.setSelectedItem(rs.getString("Department"));
                rs.close();
                String str2="Select Doctor_Name from docdetails where doctor_code='"+dcodeTXT.getText()+"'";
                ResultSet rs2=stmt1.executeQuery(str2);
                rs2.first();
                dnameCB.setSelectedItem(rs2.getString(1));
                rs2.close();
            }
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane,e.getMessage());
        }
    }//GEN-LAST:event_modifyBTNActionPerformed

    private void deptCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptCBActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_deptCBActionPerformed

    private void deptCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_deptCBItemStateChanged
        // TODO add your handling code here:
        try{
            Class.forName("java.sql.DriverManager");
            Connection con=(Connection)DriverManager.getConnection("jdbc:mysql://localhost/hospitalmanagement_db","root","pass");
            Statement stmt=(Statement)con.createStatement();
            String dept=(String)deptCB.getSelectedItem();
            String str="Select Doctor_Name from docDetails where department='"+dept+"'";
            dnameCB.removeAllItems();
            ResultSet rs1=stmt.executeQuery(str);
            while(rs1.next()){
                dnameCB.addItem(rs1.getString(1));
            }
            rs1.close();
            String dname=(String)dnameCB.getSelectedItem();
            String str2="Select Doctor_Code, Consultation_Fee from docDetails where doctor_name='"+dname+"'";
            ResultSet rs2=stmt.executeQuery(str2);
            if(rs2.next()){
                String dc=rs2.getString("Doctor_Code");
                String f=rs2.getString("Consultation_Fee");
                dcodeTXT.setText(dc);
                fee.setText(f);
            }
            rs2.close();
            stmt.close();
            con.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_deptCBItemStateChanged

    private void opRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opRBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Gender;
    private javax.swing.JButton addBTN;
    private javax.swing.JRadioButton amtSortRB;
    private javax.swing.JRadioButton ascRB;
    private javax.swing.JButton cancelBTN;
    private javax.swing.JButton clearBTN;
    private javax.swing.JButton closeBTN;
    private javax.swing.JTextField dcodeTXT;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JComboBox deptCB;
    private javax.swing.JRadioButton deptSearchRB;
    private javax.swing.JRadioButton descRB;
    private javax.swing.JTextField diagnosisTXT;
    private javax.swing.JComboBox dnameCB;
    private javax.swing.JTextField fee;
    private javax.swing.JRadioButton femaleRB;
    private javax.swing.JRadioButton ipRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton maleRB;
    private javax.swing.JButton modifyBTN;
    private javax.swing.JRadioButton opRB;
    private javax.swing.JTable patTBL;
    private javax.swing.JRadioButton pcodeSearchRB;
    private javax.swing.JRadioButton pcodeSortRB;
    private javax.swing.JTextField pcodeTXT;
    private javax.swing.JRadioButton pnameSearchRB;
    private javax.swing.JTextField pnameTXT;
    private javax.swing.JButton refreshBTN;
    private javax.swing.JButton saveBTN;
    private javax.swing.ButtonGroup search;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton sortBTN;
    private javax.swing.ButtonGroup sortBy;
    private javax.swing.ButtonGroup sortType;
    private javax.swing.ButtonGroup stay;
    private javax.swing.JTextField stayCharges;
    // End of variables declaration//GEN-END:variables
}
